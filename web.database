CREATE TABLE public.betas
(
  id serial NOT NULL,
  processamento_id integer,
  nome character varying(230),
  arquivo text,
  tamanho integer,
  arquivo_resultado character varying,
  posicao integer,
  CONSTRAINT betas_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);

CREATE TABLE public.configuracoes
(
  key character varying(40) NOT NULL,
  valor character varying,
  CONSTRAINT configuracoes_pkey PRIMARY KEY (key)
)
WITH (
  OIDS=FALSE
);


CREATE TABLE public.ocorrencias
(
  id serial NOT NULL DEFAULT,
  beta_id integer,
  j integer,
  r integer,
  segmento text,
  letra character varying(1),
  posicao_tela integer,
  CONSTRAINT ocorrencias_pkey PRIMARY KEY (id),
  CONSTRAINT ocorrencias_beta_id_fkey FOREIGN KEY (beta_id)
      REFERENCES public.betas (id) MATCH SIMPLE
      ON UPDATE RESTRICT ON DELETE RESTRICT,
  CONSTRAINT ocorrencias_beta_id_j_key UNIQUE (beta_id, j)
)
WITH (
  OIDS=FALSE
);

CREATE TABLE public.processamentos
(
  id serial NOT NULL DEFAULT,
  inicio timestamp with time zone,
  fim timestamp with time zone,
  tempo_gasto_segundos integer,
  alfa_nome character varying(230),
  alfa_arquivo character varying(300),
  alfa_tamanho integer,
  mostrar_maior_menor boolean,
  mostrar_entre_mil_dois_mil boolean,
  posicao integer,
  distancia integer,
  processamento text,
  nome character varying(230),
  informacao text,
  salvo boolean NOT NULL DEFAULT false,
  programa_id integer,
  quantidade_diferencas integer NOT NULL DEFAULT 1,
  maior_tamanho integer,
  menor_tamanho integer,
  mostrar_distancia boolean,
  mostrar_limite_caracteres boolean,
  j_inicio integer,
  j_fim integer,
  limite_caracteres integer,
  tipo_sequencia character varying(20),
  CONSTRAINT processamentos_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);


CREATE TABLE public.programas
(
  id serial NOT NULL DEFAULT,
  nome character varying(250),
  local text,
  tipo_sequencia character varying(20),
  versao character varying(10),
  ativo boolean NOT NULL DEFAULT true,
  parametros character varying(40),
  CONSTRAINT programas_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);

CREATE TABLE public.resultados
(
  id serial NOT NULL DEFAULT, 
  processamento_id integer,
  ocorrencia_id integer,
  distancia integer,
  CONSTRAINT resultados_pkey PRIMARY KEY (id),
  CONSTRAINT resultados_ocorrencia_id_fkey FOREIGN KEY (ocorrencia_id)
      REFERENCES public.ocorrencias (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT resultados_processamento_id_fkey FOREIGN KEY (processamento_id)
      REFERENCES public.processamentos (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);


CREATE TABLE public.maiores
(
  id serial NOT NULL DEFAULT,
  resultado_id integer,
  CONSTRAINT maiores_pkey PRIMARY KEY (id),
  CONSTRAINT maiores_resultado_id_fkey FOREIGN KEY (resultado_id)
      REFERENCES public.resultados (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);


CREATE TABLE public.menores
(
  id serial NOT NULL DEFAULT,
  resultado_id integer,
  CONSTRAINT menores_pkey PRIMARY KEY (id),
  CONSTRAINT menores_resultado_id_fkey FOREIGN KEY (resultado_id)
      REFERENCES public.resultados (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);




CREATE OR REPLACE VIEW public.view_processamentos AS 
 SELECT p.id,
    p.alfa_nome,
    p.alfa_tamanho,
    p.nome,
    p.informacao,
    p.quantidade_diferencas,
    p.tipo_sequencia,
    count(rs.id) AS ocorrencias
   FROM processamentos p
     JOIN resultados rs ON rs.processamento_id = p.id
  WHERE p.salvo = true
  GROUP BY p.id, p.alfa_nome, p.alfa_tamanho, p.nome, p.informacao, p.quantidade_diferencas, p.tipo_sequencia;






